
//
//  main.c
//  pta
//
//  Created by Aron on 2020/3/15.
//  Copyright © 2020 Aron. All rights reserved.
// 7-5 两个有序链表序列的交集 (20分)
//先用顺序表吧 其实只需要两个

#include <stdio.h>



int main()
{

    int i,x,n=0,m=0;
    int a[1000005],b[1000005];
    
    scanf("%d",&x);
    while(x!=-1){
        a[n++]=x;
        scanf("%d",&x);
    }
    scanf("%d",&x);
    
    while(x!=-1){
        for (i=0;i<n; i++) {
            if (x==a[i]) {
                b[m++]=x;break;
            }
        }
        scanf("%d",&x);
    }
    
    

    for(i=0;i<m-1;i++){
        printf("%d ",b[i]);
    }
    printf("%d",b[m-1]);
   
   return 0;
}

测试点    提示    结果    耗时    内存
0    样例等价
答案正确
3 ms    296 KB
1    交集为空
答案错误
2 ms    368 KB
2    完全相交
答案正确
2 ms    256 KB
3    其中一个序列完全属于交集
答案正确
2 ms    368 KB
4    其中一个序列为空
答案错误
2 ms    228 KB
5    大规模数据
运行超时
--    0 KB


//
//  main.c
//  pta
//
//  Created by Aron on 2020/3/15.
//  Copyright © 2020 Aron. All rights reserved.
// 7-5 两个有序链表序列的交集 (20分)
//先用顺序表吧 其实只需要两个

#include <stdio.h>



int main()
{

    int i,j,k,x,n,m;
    int a[10005],b[10005],c[10000];
    n=m=0;
    scanf("%d",&x);
    while(x!=-1){
        a[n++]=x;
        scanf("%d",&x);
    }
    
    scanf("%d",&x);
    while(x!=-1){
        b[m++]=x;
        scanf("%d",&x);
    }

    if (n==0&&m==0) {
        printf("NULL");
    }else if (n==0){
        for(i=0;i<m-1;i++){
            printf("%d ",b[i]);
        }
        printf("%d",b[m-1]);
    }else if (m==0){
        for(i=0;i<n-1;i++){
            printf("%d ",a[i]);
        }
        printf("%d",a[n-1]);
    }else if (n!=m){
        i=j=k=0;
        while(i<n&&j<m){
                   if (a[i]==b[j]) {
                       c[k]=a[i];
                       k++;
                       i++;
                       j++;
                   }else if (a[i]<b[j]){
                       i++;
                   }else{
                       j++;
                   }
               }
             
        
        if (k<=0) {
             printf("NULL");
        }else{
               for(i=0;i<k-1;i++){
                   printf("%d ",c[i]);
               }
               printf("%d",c[k-1]);
        }
    }

    


   
   return 0;
}


测试点    提示    结果    耗时    内存
0    样例等价
答案正确
2 ms    364 KB
1    交集为空
答案正确
2 ms    384 KB
2    完全相交
答案错误
2 ms    296 KB
3    其中一个序列完全属于交集
答案正确
3 ms    360 KB
4    其中一个序列为空
答案错误
2 ms    384 KB
5    大规模数据
段错误
25 ms    640 KB


